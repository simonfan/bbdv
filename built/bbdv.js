//     bbdv
//     (c) simonfan
//     bbdv is licensed under the MIT terms.

define("bb-rendered-view",["require","exports","module","lowercase-backbone","lodash"],function(e,t,i){var r=e("lowercase-backbone").view,a=e("lodash"),n=r.prototype.initialize,s=r.extend({initialize:function(e){n.apply(this,a.toArray(arguments)),a.each(["template","templateCompiler","templateDataDefaults","templateDataParse","render"],function(t){this[t]=e[t]||this[t]},this),this.render(e)},templateCompiler:a.template,template:void 0,templateDataDefaults:{},templateDataParse:function(e){return a.assign({},this.templateDataDefaults,e)},render:function(e){var t=this.template;if(t){var i=this.templateDataParse(e);if(console.log(i),a.isFunction(t))var r=t(i);else if(a.isString(t))var r=this.templateCompiler(t)(i);this.$el.html(r)}return this}});i.exports=s}),define("bbdv/aux",["require","exports","module"],function(e,t){t.camelCase=function(e){return e.replace(/[-_\s]+(.)?/g,function(e,t){return t?t.toUpperCase():""})},t.buildPrefixRegExp=function(e){return new RegExp("^"+e+"([A-Z$_].*$|$)")},t.lowercaseFirst=function(e){return e.charAt(0).toLowerCase()+e.slice(1)},t.uppercaseFirst=function(e){return e.charAt(0).toUpperCase()+e.slice(1)}}),define("bbdv/extract-directive-arguments",["require","exports","module","lodash","bbdv/aux"],function(e,t,i){function r(e,t){return n.camelCase(e+"-"+t)}var a=e("lodash"),n=e("bbdv/aux");i.exports=function(e,t,i){e=e||"",t.sort(function(e,t){return t.length-e.length});var s={};return a.each(i,function(i,c){a.any(t,function(t){var o=r(e,t);if(a.has(s,t)&&!a.isObject(s[t]))return!1;if(o===c)return s[t]=i,!0;var u=n.buildPrefixRegExp(o),d=c.match(u);if(d){var l=s[t];return l||(l=s[t]={}),l[n.lowercaseFirst(d[1])]=i,!0}return!1},this)},this),s}}),define("bbdv/execute-directives",["require","exports","module","lodash","bbdv/extract-directive-arguments","bbdv/aux"],function(e,t,i){{var r=e("lodash"),a=e("bbdv/extract-directive-arguments");e("bbdv/aux")}i.exports=function(e,t,i){var n=a(t,r.keys(i),e.data());r.each(n,function(t,a){var n=i[a];r.isFunction(n)?n.call(this,e,t):(n.exclude&&r.each(n.exclude,function(e){delete t[e]}),n.fn.call(this,e,t))},this)}}),define("bbdv",["require","exports","module","bb-rendered-view","jquery","lodash","bbdv/aux","bbdv/execute-directives"],function(e,t,i){var r=e("bb-rendered-view"),a=e("jquery"),n=e("lodash"),s=e("bbdv/aux"),c=e("bbdv/execute-directives"),o=r.prototype.initialize,u=i.exports=r.extend({initialize:function(e){o.call(this,e),n.each(["namespace","directives"],function(t){this[t]=e[t]||this[t]},this),this.directives=n.reduce(this.directives,function(e,t,i){return e[s.camelCase(i)]=n.isString(t)?this[t]:t,e},{},this),this.incorporate(this.$el)},incorporate:function(e){e=a(e);var t=this.directives,i=this.namespace,r=this.selector(this.namespace),s=e.find(r).addBack(r);return n.each(s,function(e){c.call(this,a(e),i,t)},this),this},directives:{},namespace:"dir",selector:function(e){return"[data-"+e+"]"}});u.assignStatic("directive",function(){n.isObject(arguments[0])?n.assign(this.prototype.directives,arguments[0]):this.prototype.directives[arguments[0]]=arguments[1]}),u.assignStatic("extendDirectives",function(e){var t=n.create(this.prototype.directives);n.assign(t,e);var i=this.extend({directives:t});return i})});